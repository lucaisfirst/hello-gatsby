{"version":3,"file":"prism.umd.js","sources":["../src/index.tsx"],"sourcesContent":["/** @jsx jsx */\nimport Highlight, { defaultProps, Language } from 'prism-react-renderer'\nimport { jsx, Themed } from 'theme-ui'\n\nconst aliases: Record<string, Language | undefined> = {\n  js: 'javascript',\n  sh: 'bash',\n}\n\nconst isInRange = (start: number, end: number, num: number) => {\n  if (num >= start && num <= end) {\n    return true\n  }\n  return false\n}\n\nconst checkRanges = (range: number[], num: number) => {\n  for (let i = 0; i < range.length; i += 2) {\n    if (isInRange(range[i], range[i + 1], num)) {\n      return true\n    }\n  }\n  return false\n}\n\ntype HighlightProps = React.ComponentPropsWithoutRef<typeof Highlight>\n// prism-react-renderer doesn't export `Token` type\ntype Tokens = Parameters<HighlightProps['children']>[0]['tokens']\ntype Token = Tokens[number][number]\n\nexport interface ThemeUIPrismProps\n  extends Omit<\n    HighlightProps,\n    'children' | 'code' | 'language' | 'theme' | 'Prism'\n  > {\n  className: string\n  children: string\n  Prism?: HighlightProps['Prism']\n}\nexport default function ThemeUIPrism({\n  children,\n  className: outerClassName,\n  ...props\n}: ThemeUIPrismProps) {\n  const [language] = outerClassName.replace(/language-/, '').split(' ')\n  const lang = aliases[language] || language\n  let startEndRangesToHighlight: number[] = []\n  let countHighlightCommentsRemoved: number = 0;\n\n  const findStartAndEndHighlights = (tokens: Token[][]) => {\n    const tokensWithoutHighlightComments = tokens.filter((item, index) => {\n      const removeLine = item\n        .map(({ content }) => {\n          if (content.trim() === '// highlight-start') {\n            /**\n             * Track highlighted lines, including countHighlightCommentsRemoved \n             * so we can keep track of multiple highlight-start and highlight-end blocks. \n             * */\n            startEndRangesToHighlight.push(index - countHighlightCommentsRemoved)\n            countHighlightCommentsRemoved += 1; \n            return true\n          }\n          if (content.trim() === '// highlight-end') {\n            /**\n             * Subtract by (countHighlightCommentsRemoved + 1) to account for \n             * the current highlight-end block being removed.\n             * */\n            startEndRangesToHighlight.push(index - (countHighlightCommentsRemoved + 1))\n            countHighlightCommentsRemoved += 1; \n            return true\n          }\n        })\n        .filter(Boolean)[0]\n      if (!removeLine) {\n        return item\n      }\n    })\n    return tokensWithoutHighlightComments\n  }\n\n  const isStartEndHighlighted = (index: number) => {\n    return checkRanges(startEndRangesToHighlight, index)\n  }\n\n  const isInlineHighlighted = (line: Token[]) => {\n    const regex = new RegExp('// highlight-line$')\n    for (let token of line) {\n      if (regex.test(token.content)) {\n        token.content = token.content.replace(regex, '') // remove the highlight-line comment now that we've acted on it\n        return true\n      }\n    }\n    return false\n  }\n\n  const shouldHighlightLine = (line: Token[], index: number) => {\n    return isStartEndHighlighted(index) || isInlineHighlighted(line)\n  }\n\n  return (\n    <Highlight\n      {...defaultProps}\n      {...props}\n      code={children.trim()}\n      language={lang as Language}\n      theme={undefined}>\n      {({ className, style, tokens, getLineProps, getTokenProps }) => {\n        const tokensWithoutHighlightComments = findStartAndEndHighlights(tokens)\n        return (\n          <Themed.pre\n            className={`${outerClassName} ${className}`}\n            style={style}>\n            {tokensWithoutHighlightComments.map((line, i) => {\n              const lineProps = getLineProps({ line, key: i })\n              if (shouldHighlightLine(line, i)) {\n                lineProps.className = `${lineProps.className} highlight`\n              }\n              return (\n                <div {...lineProps}>\n                  {line.map((token, key) => (\n                    <span\n                      {...getTokenProps({ token, key })}\n                      sx={token.empty ? { display: 'inline-block' } : undefined}\n                    />\n                  ))}\n                </div>\n              )\n            })}\n          </Themed.pre>\n        )\n      }}\n    </Highlight>\n  )\n}\n"],"names":["aliases","js","sh","isInRange","start","end","num","checkRanges","range","i","length","ThemeUIPrism","children","outerClassName","className","props","replace","split","language","lang","startEndRangesToHighlight","countHighlightCommentsRemoved","findStartAndEndHighlights","tokens","tokensWithoutHighlightComments","filter","item","index","removeLine","map","content","trim","push","Boolean","isStartEndHighlighted","isInlineHighlighted","line","regex","RegExp","token","test","shouldHighlightLine","jsx","Highlight","defaultProps","code","theme","undefined","style","getLineProps","getTokenProps","Themed","pre","lineProps","key","sx","empty","display"],"mappings":"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"}